@model PaginatedList<GEFSDatabase1.Models.Products>

@{
    ViewData["Title"] = "Players";
}

<div>
    <h1>Products List</h1>


    <p>

        <a asp-action="Create">Create New</a>
    </p>


    <form asp-controller="Players" asp-action="Index">
        <p>
            Products <input type="text" name="searchTerm" value="@ViewData["CurrentFilter"]"  />
            <button type="submit" class="btn btn-primary">Search</button>
        </p>
    </form>

    
    <table class="table table-bordered table-striped table-hover">
        <thead>
            <tr>

                <th>
                     Name
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">Date</a>
                </th>
                <th>
                    Price
                </th>
                <th>
                    Category
                </th>
                <th>
                    Suppliers
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Supplier)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ProductID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ProductID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ProductID">Delete</a>
                </td>
            </tr>
            }
        </tbody>
    </table>

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-primary @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-primary @nextDisabled">
        Next
    </a>
</div>
